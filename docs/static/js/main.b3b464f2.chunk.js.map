{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","className","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","class","role","GifApp","defaultCategories","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACQ,sBAAMC,UAAU,aAAaC,SAThB,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC/BT,GAAe,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACvCP,EAAc,MAKV,SACA,uBAAOC,UAAU,eACbO,YAAY,cACZC,KAAK,OACLC,MAAQX,EACRY,SAlBc,SAACR,GACvBH,EAAcG,EAAES,OAAOF,a,QCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKf,UAAU,yCAAf,UACI,qBAAKA,UAAU,eAAegB,IAAKD,EAAKE,IAAKH,IAC7C,4BAAIA,Q,uBCJHI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbL,EADa,iDACmCM,UAAUF,GAD7C,+DAEDG,MAAMP,GAFL,cAEbQ,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QATvB,kBAaZW,GAbY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0BtB,mBAAS,CAC/B4B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAP,GACnBK,EAAS,CACLT,KAAMI,EACNG,SAAS,SAGlB,CAACb,IAEGc,EDXwBI,CAAalB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAEpB,OACI,qCACA,oBAAIhC,UAAU,kBAAd,SAAiCmB,IAC/Ba,GAAW,qBAAKM,MAAM,sBAAsBC,KAAK,QAAtC,qBACb,qBAAKvC,UAAU,gDAAf,SAEY6B,EAAOF,KAAK,SAACC,GAAD,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIf,aEdpB2B,EAAS,SAAC,GAA8B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,EAChD,EAAoC5C,mBAAS4C,GAA7C,mBAAOC,EAAP,KAAmB9C,EAAnB,KAEA,OACI,gCACI,yCACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ8C,EAAWf,KAAK,SAACR,EAAUwB,GAAX,OAAiB,cAAC,EAAD,CAAwBxB,SAAUA,GAApBA,Y,MCRnEyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b3b464f2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n        setCategories( cats => [inputValue, ...cats]);\r\n        setinputValue('');\r\n    }\r\n    }\r\n\r\n    return (\r\n            <form className=\"form-group\" onSubmit={handleSubmit}>\r\n            <input className=\"form-control\"\r\n                placeholder=\"Search GIFs\"\r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            </form>\r\n    )\r\n}\r\n\r\n//required function setCategories\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img className=\"card-img-top\" src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes ={\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=JbwslOa3XV0cReKk5ipkGtC2yNUfksKU`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__fadeIn\">{category}</h3>\r\n        { loading && <div class=\"alert alert-primary\" role=\"alert\">Loading</div> }\r\n        <div className=\"card-grid album py-5 bg-light animate__fadeIn\">\r\n                {\r\n                    images.map( (img) => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img} />\r\n                        )) \r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(images => {\r\n            setstate({\r\n                data: images,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifApp = ({defaultCategories = []}) => {\r\n    const [categories, setCategories] = useState(defaultCategories)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif App</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map( (category, i) => <GifGrid key={category} category={category}/>) \r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {GifApp} from './GifApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}